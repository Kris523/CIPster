/*******************************************************************************
 * Copyright (c) 2009, Rockwell Automation, Inc.
 * All rights reserved.
 *
 ******************************************************************************/
#ifndef CIPSTER_CIPCOMMON_H_
#define CIPSTER_CIPCOMMON_H_

/** @file cipcommon.h
 * Common CIP object interface
 */

#include "typedefs.h"
#include "ciptypes.h"

/** A buffer for holding the replay generated by explicit message requests
 *  or producing I/O connections. These will use this buffer in the following
 *  ways:
 *    1. Explicit messages will use this buffer to store the data generated by the request
 *    2. I/O Connections will use this buffer for the produced data
 */
extern EipUint8 g_message_data_reply_buffer[];

/** @brief Check if requested service present in class/instance and call appropriate service.
 *
 * @param clazz class receiving the message
 * @param request request message
 * @param response reply message
 * @return
 *     - EIP_OK_SEND    ... success
 *     - EIP_OK  ... no reply to send back
 *     - EIP_ERROR ... error
 */
EipStatus NotifyClass( CipClass* clazz,
        CipMessageRouterRequest* request,
        CipMessageRouterResponse* response );

/** @brief Generic implementation of the GetAttributeSingle CIP service
 *
 *  Check from classID which Object requests an attribute, search if object has
 *  the appropriate attribute implemented.
 * @param instance pointer to instance.
 * @param request pointer to request.
 * @param response pointer to response.
 * @return status  >0 .. success
 *          -1 .. requested attribute not available
 */
EipStatus GetAttributeSingle( CipInstance* instance,
        CipMessageRouterRequest* request,
        CipMessageRouterResponse* response );


EipStatus SetAttributeSingle( CipInstance* instance,
        CipMessageRouterRequest* request,
        CipMessageRouterResponse* response );


/** @brief Generic implementation of the GetAttributeAll CIP service
 *
 * Copy all attributes from Object into the global message buffer.
 * @param instance pointer to object instance with data.
 * @param request pointer to MR request.
 * @param response pointer for MR response.
 * @return length of data stream >0 .. success
 *              0 .. no reply to send
 */
EipStatus GetAttributeAll( CipInstance* instance,
        CipMessageRouterRequest* request,
        CipMessageRouterResponse* response );

#endif    // CIPSTER_CIPCOMMON_H_
